---
layout: post
title:      "What's in the box?!"
date:       2018-06-08 13:33:24 -0400
permalink:  whats_in_the_box
---



As I'm sitting here in the midst of my Ruby development module, it's quite the surreal feeling being able to write my own code in this beautiful black and white terminal.   2014 Christopher would have scoffed at the thought of software engineering as an attainable goal.  I had spent the previous 5 years as a video game tester, spending my time on the surface of the software.  I carved out a niche in my role, becoming known for triggering the most complex bugs in the game.  Understanding the logic of the tech always came naturally to me, and as soon as I would receive a fix for 3 scenarios of a bug, I would then think of 4 additional methods to trigger it and stress test the newly implemented logic.  However, during this time I put the developers on a pedestal (rightfully so), and never once did I have a thought that I’d realistically be able to understand what was making these games hum along.

I took a new gig at a mobile application startup in Marina Del Rey, CA in 2015, which is essentially where my code curiosity was sparked.  It was quite the contrast in environments, transitioning from a worldwide juggernaut with thousands of employees, to now being confined to one floor consisting of about 30 employees at most.  The experience was invaluable as I was able to witness an entire tech company being run right in front of me on a daily basis.  While being a part of this intimate atmosphere, it allowed me to peek into the various elements of the company, such as product, marketing, and most importantly engineering.  My role had shifted to more of a gray box testing role, in which I was utilizing debugging tools to analyze errors within the app, as well as running API tests.  This was my first time actually taking a look under the hood of a program.  Slowly, the job of a developer started to set into my atmosphere as I was able to work side by side with the devs, and debug issues found.  But it wasn’t until a fellow tester of mine, who unbeknownst to the rest of us, had been learning Java for months and started to implement an automation framework.  What… All my beliefs were shattered.  It was firmly in my mind that coding was not an attainable goal for someone without years and years of computer science schooling.  This is when such resources as CodeAcademy were first brought to my attention.  

Once again I mozied along, and took my talents to another startup, this time an Ad-Tech company located in Manhattan Beach, CA.  This is where my passion for code really started to evolve.  I was tasked with project management of a small QA testing team, whose purpose was to maintain a product line that consisted of javascript integrations spread out over 50 client websites.  After working very closely with our developers, I started to catch on to the how’s and why’s of our code, and it only made me curiouser and curiouser.  It was at this point when I started to explore options online for teaching myself to code in javascript.  This started with the intro course offered by Code Academy, which I thought was a great way to get the feet wet.  After that, I moved on to Coursera, which although had great structure to its courses, felt extremely dated with their actual content and methodologies they were deciding to teach.  I repeatedly found myself searching for outside sources on a particular method, and more often than not would find a much more clear and concise way to write the code containing the same functions.  After completion of their Programming Foundations with HTML, CSS & JS as well as their Intro Web Development course, I found myself scouring for more resources to continue my learning.  And while I did find a few solid resources out there, I realized that with as much of a scatterbrain as I am already, this going back and forth between different lessons on these sites was not going to end up well for me, so that’s when I decided to explore the boot camp routes. 
 
Overall, I’d say my decision to start coding was a relatively natural progression, given my knack for problem-solving in general, as well as my passion for technology.  After spending so many years in QA, sitting on the outside of the box, I’m beyond excited to finally take a dive on the other side and create my own.  


